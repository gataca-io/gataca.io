name: Web CD PRO

on:
  push:
    branches:
      - 'master'

env: 
  AWS_REGION: eu-west-1

jobs:
  update:
    name: Set up Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN}} 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CD_AWS_ACCESS_KEY_ID_PRO }}
          aws-secret-access-key: ${{ secrets.CD_AWS_SECRET_ACCESS_KEY_PRO }}
          aws-region: ${{ env.AWS_REGION }}
     
      - name: Configure git for private modules
        run: git config --global url."https://${{ secrets.CI_TOKEN }}:x-oauth-basic@github.com/gataca-io".insteadOf "https://github.com/gataca-io"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: navasgataca              ###############  CHANGE TO GENERIC USER ###############
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

######  REQUITE ADD samu user to : bypass required pull requests
#      - name: Set up version pro    
#        run: |
#          git config --global user.email ${{ github.actor }}@gataca.io
#          git config --global user.name ${{ github.actor }}
#          yarn version --patch
#          V=$(node -p "require('./package.json').version")
#          echo "The version: " $V "."
#          echo "ver="$V >> $GITHUB_ENV
#
      - name: Create and upload Docker image
        run: |
          make release 
          docker image ls

######  REQUITE ADD samu user to : bypass required pull requests
#      - name: Update deployment-pro
#        run: |
#          sed -i 's/website:.*$/website:${{ env.ver }}/g' deployments/deployment-pro.yml 
#          echo -n "deployment-pro.yml:" ; grep 'website' deployments/deployment-pro.yml || true # output
#          git add .
#          git commit -m "Change to image version to ${{ env.ver }} because of gataca.io CD PRO action."
#          git push
#

      - name: Install and configure kubectl
        run: |
          echo "Installing kubctl..."
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          VERSION=v1.23.6
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
              --progress-bar \
              --location \
              --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          mkdir $HOME/.kube/
          echo ${{ secrets.CD_KUBE_CONFIG_PRO }} | base64 --decode > $HOME/.kube/config
          kubectl config get-contexts
          kubectl -n web rollout restart deploy web
#          kubectl apply -f deployments/deployment-pro.yml || true

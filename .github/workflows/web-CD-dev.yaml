name: web CD DEV

on:
  workflow_dispatch:
    inputs:
      ExecuteChoice:
        type: choice
        description: 'Deploy web in DEV?'
        required: true
        default: 'NO'
        options:
        - "YES"
        - "NO"
  push:
    branch: fix_gh_action2


env: 
  AWS_REGION: eu-central-1
  STRAPI_TOKEN: ${{ secrets.STRAPI_TOKEN_DEV }}
jobs:
  update:
    name: Set up Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CI_TOKEN }} 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CD_AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.CD_AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.AWS_REGION }}
     
      - name: Configure git for private modules
        run: git config --global url."https://${{ secrets.CI_TOKEN }}:x-oauth-basic@github.com/gataca-io".insteadOf "https://github.com/gataca-io"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: navasgataca              ###############  CHANGE TO GENERIC USER ###############
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: Create and upload Docker image
        run: |
          cd web 
          echo 'STRAPI_API_URL=https://strapi.dev.gataca.io' > .env.production
          echo "STRAPI_TOKEN=" "$STRAPI_TOKEN" >> .env.production
          #make pre-release 
          docker image ls ## Output
          rm .env.production
      - name: Set up deployment-dev
        run: |
          git config --global user.email ${{ github.actor }}@gataca.io
          git config --global user.name ${{ github.actor }}
          # Update version pre
          V=$(grep version web/package.json | cut -d'"' -f4)
          echo "ver="$V-pre >> $GITHUB_ENV
          IMAGE=$(grep 'image:' web/deployments/deployment-dev.yml | cut -d':' -f3 | cut -d'-' -f1)
          echo "image="$IMAGE-pre >> $GITHUB_ENV
          echo "version $V, image $IMAGE."
      - name: Update deployment-dev
        run: |
          if [ "${{ github.event.inputs.ExecuteChoice }}" == "YES" ]; then
            if [ "${{ env.ver }}" != "${{ env.image }}" ]; then
              sed -i 's/website:.*$/website:${{ env.ver }}/g' web/deployments/deployment-dev.yml          
              echo "deployment-dev.yml:" ; grep 'website' web/deployments/deployment-dev.yml || true # output
              git add .
              git commit -m "Change to image version to ${{ env.ver }} because of gataca.io CD DEV action."
              git push
            fi
          fi
      - name: Install and configure kubectl
        run: |
          if [ "${{ github.event.inputs.ExecuteChoice }}" != "YES" ]; then
            echo "Installing kubctl..."
            VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
            VERSION=v1.23.6
            curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
                --progress-bar \
                --location \
                --remote-name
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
            mkdir $HOME/.kube/
            echo ${{ secrets.CD_KUBE_CONFIG_DEV }} | base64 --decode > $HOME/.kube/config
            kubectl config get-contexts
            kubectl diff -f web/deployments/deployment-dev.yml || true 
            kubectl -n web scale deploy web --replicas=0 
            kubectl apply -f web/deployments/deployment-dev.yml
          fi 
